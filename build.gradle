plugins {
	id 'java'

//	------------------------------------
//	If you want to package runnable `jar` and `war`, Must be required.(***)
//	------------------------------------
	id 'war'

	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'

//	id 'org.springframework.boot' version '2.7.15'
//	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
} // plugins


group = 'org.zerock'
version = '0.0.1-SNAPSHOT'


java {
	sourceCompatibility = '17'
	targetCompatibility = '17'
} // java


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	} // compileOnly
	testCompileOnly {
		extendsFrom testAnnotationProcessor
	} // testCompileOnly
} // configurations


repositories {
	mavenLocal()
	mavenCentral()
} // repositories


dependencies {
	// ---------------------------------------------
	// * Dependencies * can not be declared against the `runtimeClasspath`,	`compileClasspath`,
	// 	`testCompileClasspath`,	`testRuntimeClasspath`, `apiElements` configuration.
	// ---------------------------------------------

	// ====================================================================== //
	// 1. Essentially Fundamental Dependencies for Web
	// ====================================================================== //
	// `compileOnly` only used for `main` sources.
	// Whereas, `implementation` also would be useful for `test` sources.
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-mustache'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// * Note: `spring-boot-starter-test` already includes `JUnit Test Framework`.
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'


	// ====================================================================== //
	// 2. `querydsl` for dynamic query
	// ====================================================================== //
	// groupId:artifactId:version:classifier
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	implementation 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	implementation 'com.querydsl:querydsl-core'


	// ====================================================================== //
	// 3. Dependencies for JSP Compiler & JSTL
	// ====================================================================== //
	implementation	'org.apache.tomcat.embed:tomcat-embed-jasper'

	// 3-1. For Spring Boot v2.7.x
//	implementation 	'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:1.2.7' 	// * No required *
//	implementation 	'org.glassfish.web:jakarta.servlet.jsp.jstl:1.2.6'

	// 3-2. For Spring Boot v3.1.x
	implementation 	'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0' 	// * Required *
	implementation 	'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.1'


	// ====================================================================== //
	// 4. JDBC Drivers for H2, Oracle MySQL & Oracle OCI
	// ====================================================================== //
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// ---------------------------------------------
	// (* Caution *) Do use this Oracle OCI dependency
	// with `server.tomcat.additional-tld-skip-patterns = *18*, osdt*` property
	// declared in `application.properties` file.
	// ---------------------------------------------
	runtimeOnly('com.oracle.database.jdbc:ojdbc8-production') {
		exclude group: 'com.oracle.database.ha', 	module: 'simplefan'
		exclude group: 'com.oracle.database.ha', 	module: 'ons'
		exclude group: 'com.oracle.database.jdbc', 	module: 'rsi'
		exclude group: 'com.oracle.database.xml', 	module: 'xdb'
		exclude group: 'com.oracle.database.xml', 	module: 'xmlparserv2'
	}


	// ====================================================================== //
	// 5. JDBC Proxy Driver - Driver Spy
	// ====================================================================== //
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4:1.16'


	// ====================================================================== //
	// 6. Spring Security Tag libraries
	// ====================================================================== //
	implementation 'org.springframework.security:spring-security-taglibs'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
} // dependencies


test {						// 1st. method - OK : == tasks.named('test')
//tasks.named('test') {		// 2nd. method - OK : == test
	useJUnitPlatform()		// Execute the `useJUnitPlatform()` method.
} // When executing gradle task named `test`


bootWar {													// 1st. method - OK : == tasks.named('bootWar')
//tasks.named('bootWar') {									// 2nd. method - OK : == bootWar
	// Execute the `setDuplicatesStrategy()` or `duplicatesStrategy()` method.
	duplicatesStrategy(DuplicatesStrategy.EXCLUDE)			// 1st. method - OK : == setDuplicatesStrategy
	// setDuplicatesStrategy(DuplicatesStrategy.EXCLUDE)	// 2nd. method - OK : == duplicatesStrategy
} // When executing gradle task `bootWar`

